apply plugin: 'com.android.application'

def replaceInManifest(manifestPath, fromString, toString) {
    def manifestContent = file(manifestPath).getText('UTF-8')
    manifestContent = manifestContent.replace(fromString, toString)
    file(manifestPath).write(manifestContent, 'UTF-8')
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    signingConfigs {
        release {
            keyAlias 'myth_hai'
            keyPassword 'myth_hai'
            keyPassword 'myth_hai'
            storeFile file('C:\\Edisk\\AndroidPro\\temp\\zy888-android\\mdsj.jks')
            storePassword 'myth_hai'
        }
    }

    aaptOptions {
        cruncherEnabled = false
//        useNewCruncher = false
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.appTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true

        flavorDimensions "default"
        ndk {
            abiFilters "armeabi", "armeabi-v8a", "armeabi-v7a"
        }

        javaCompileOptions {
            annotationProcessorOptions
                    {
                        includeCompileClasspath true
                    }
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField 'String', 'SERVER_URL', '"https://mdsj.wenzuxz.com"'
            resValue "string", "app_name_live", "@string/app_name_release"
        }

        debug {
            signingConfig signingConfigs.release
            resValue "string", "app_name_live", "@string/app_name_debug"
//            buildConfigField 'String', 'SERVER_URL', '"http://mdsj.wenzuxz.com"'
            buildConfigField 'String', 'SERVER_URL', '"https://ceshimdsj.wenzuxz.com"'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        android.applicationVariants.all {
            variant ->
                variant.outputs.each {
                    output ->
                        output.processResources.doFirst {
                            pm ->
                                String manifestPath = output.processResources.manifestFile;
                                print(manifestPath);
                                replaceInManifest(manifestPath, 'ZJ_AUTHORITY', variant.applicationId);
                        }
                }
        }

    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    productFlavors {
        //米粒直播
        mili {
            applicationId "com.wwsl.mdsj"

            buildConfigField("String", "CHANNEL", "\"mili\"")
            //Android 7.0 拍照要用这个，java文件
            buildConfigField("String", "fileprovider", "\"com.wwsl.mdsj.fileprovider\"")

            //占位符
            manifestPlaceholders = [
                    fileprovider       : "com.wwsl.mdsj.fileprovider",//Android 7.0 拍照要用这个，manifest文件
                    BUGLY_APP_CHANNEL  : "com.wwsl.mdsj",//腾讯bugly
                    JPush              : "com.wwsl.mdsj",//极光推送
                    UMENG_CHANNEL_VALUE: "com.wwsl.mdsj",//友盟统计
                    JPUSH_PKGNAME      : "com.wwsl.mdsj",
                    JPUSH_APPKEY       : "02d2d04bdfc7a1cb0d8eadbc", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL      : "developer-default", //暂时填写默认值即可.
            ]

            buildConfigField 'String', 'tx_dsp_LicenseUrl', '"http://license.vod2.myqcloud.com/license/v1/e61bd3fa92b1aa2ea8f813570e325b45/TXUgcSDK.licence"'
            buildConfigField 'String', 'tx_dsp_Key', '"155f9d5ad18a5aad5274e8b09376ad75"'

            buildConfigField 'String', 'tx_live_LicenseUrl', '"http://license.vod2.myqcloud.com/license/v1/e61bd3fa92b1aa2ea8f813570e325b45/TXLiveSDK.licence"'
            buildConfigField 'String', 'tx_live_Key', '"155f9d5ad18a5aad5274e8b09376ad75"'

            buildConfigField 'String', 'tiui_Key', '\"\"'
            buildConfigField 'Boolean', 'isOpenTiui', 'false'
            buildConfigField 'String', 'SERVER_URL', '"https://mdsj.wenzuxz.com"'
            buildConfigField 'String', 'UMENG_KEY', '"5f042d1f978eea07806115a1"'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
//            variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/app/apk")
            outputFileName = "apk_mdsj_${buildType.name}-${defaultConfig.versionName}-${releaseTime()}.apk"
        }
    }
}

def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

repositories {
    flatDir {
        dirs 'libs', '../libs'
    }
}

dependencies {
    debugImplementation 'com.iqiyi.lens:lens:1.1.0'
    releaseImplementation 'com.iqiyi.lens:lens-no-op:1.1.0'

    api fileTree(include: ['*.jar'], dir: 'libs')
    //萌颜
    api project(':beauty')
    //游戏
    api project(':game')
    //短视频
    api project(':video')
    //公共包
    api project(':fire')
    //socket.io
    api('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    //gif库，播放礼物gif用
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.20'
    //腾讯短视频sdk
    api(name: 'LiteAVSDK_Professional_7.0.8670', ext: 'aar')

    api(name: 'msa_mdid_1.0.13', ext: 'aar')

    api(name: 'alipaySdk-15.7.7-20200702160044', ext: 'aar')
    //exoplayer
    api group: 'com.google.android.exoplayer', name: 'exoplayer', version: '2.10.4'
    //腾讯定位，地图sdk
    api 'com.tencent.map.geolocation:TencentLocationSdk-openplatform:7.2.6'
    api 'com.tencent.map:tencent-map-vector-sdk:4.3.4'
    //腾讯云存储
    api 'com.tencent.qcloud:cosxml:5.4.13'
    //七牛云存储
    api 'com.qiniu:qiniu-android-sdk:7.6.4'
    //百度语音识别
    api files('libs/bdasr_3.0.8.2.jar')
    //svga 直播礼物动画
    api 'com.github.yyued:SVGAPlayer-Android:2.4.0'
    //jetbrains 注解库
    api 'org.jetbrains:annotations:19.0.0'
    //banner
    api 'com.bigkoo:convenientbanner:2.0.5'
    //ButterKnife
    api 'com.jakewharton:butterknife:10.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    //swiperecyclerview
    api 'com.yanzhenjie.recyclerview:support:1.3.2'
    //BaseRecyclerViewAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    api 'com.superluo:textbannerview:1.0.5'  //tx banner
    implementation 'com.youth.banner:banner:1.4.10'   //image banner

    implementation 'com.zzhoujay.richtext:richtext:3.0.8'
    implementation 'com.github.kingideayou:tagcloudview:1.0.2'
    implementation 'com.fyales.android:library:1.0.2'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation 'cn.yipianfengye.android:zxing-library:2.2'
//            <!--HuTool Java工具包-->
    compileOnly 'org.projectlombok:lombok:1.18.12' //添加lombok依赖
    annotationProcessor 'org.projectlombok:lombok:1.18.12' //添加lombok依赖
    implementation 'org.glassfish:javax.annotation:10.0-b28' //java注解

    api("me.jessyan:autosize:1.2.1")

    implementation 'com.umeng.umsdk:common:9.1.0'
    implementation 'com.umeng.umsdk:asms:1.1.3' // asms包依赖(必选)
    implementation 'com.umeng.umsdk:crash:0.0.4' // native crash包依赖(必选)
    implementation 'com.umeng.umsdk:share-core:7.0.2'
    implementation 'com.umeng.umsdk:share-board:7.0.2'

//    implementation  'com.umeng.umsdk:share-qq:7.0.2'
    implementation 'com.umeng.umsdk:share-wx:7.0.2'
    implementation 'com.umeng.umsdk:share-alipay:7.0.2'

    implementation 'com.mxn.soul:flowingdrawer-core:2.1.0'
    implementation 'com.nineoldandroids:library:2.4.0'

    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.8'
    //DK 播放器
    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.2.6'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:3.2.6'
    implementation 'com.github.dueeeke.dkplayer:player-ijk:3.2.6'
    implementation 'com.github.dueeeke.dkplayer:player-exo:3.2.6'
    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.2.6'
    implementation 'com.github.dueeeke.dkplayer:videocache:3.2.6'

    implementation 'cn.jiguang.sdk:jmessage:2.9.2'  // 此处以JMessage 2.9.2 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.4.2'  // 此处以JCore 2.3.0 版本为例
    implementation 'cn.jiguang.sdk:jpush:3.7.0'
    //录音
    implementation 'com.lqr.audio:library:1.0.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.github.rey5137:material:1.3.0'
    implementation 'com.github.HotBitmapGG:RingProgressBar:V1.2.3'

    //腾讯人脸识别
    //1. 云刷脸SDK
    implementation(name: 'WbCloudFaceLiveSdk-v3.2.1-e8e26098', ext: 'aar')
    //2. 云common SDK
    implementation(name: 'WbCloudNormal-v4.0.14-b005c6b', ext: 'aar')
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    implementation 'com.wang.avi:library:2.1.3'

    api 'com.meiqia:meiqiasdk:3.6.2'

    implementation 'com.android.support:design:28.0.0'

    //众简广告
    api(name: 'zj_core', ext: 'aar')
    api(name: 'zj_sdk_2.0.5', ext: 'aar')
    implementation 'com.android.support:support-v4:28.0.0'

}
